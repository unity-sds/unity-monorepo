{
  "components": {
    "schemas": {
      "Bbox": {
        "properties": {
          "bbox": {
            "items": {
              "type": "number"
            },
            "title": "Bbox",
            "type": "array"
          },
          "crs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Crs5"
              },
              {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "title": "Crs"
          }
        },
        "required": [
          "bbox"
        ],
        "title": "Bbox",
        "type": "object"
      },
      "BinaryInputValue": {
        "title": "BinaryInputValue",
        "type": "string"
      },
      "ConfClasses": {
        "properties": {
          "conformsTo": {
            "items": {
              "type": "string"
            },
            "title": "Conformsto",
            "type": "array"
          }
        },
        "required": [
          "conformsTo"
        ],
        "title": "ConfClasses",
        "type": "object"
      },
      "Crs5": {
        "enum": [
          "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
          "http://www.opengis.net/def/crs/OGC/0/CRS84h"
        ],
        "title": "Crs5",
        "type": "string"
      },
      "Exception": {
        "additionalProperties": true,
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          },
          "instance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance"
          },
          "status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "Exception",
        "type": "object"
      },
      "Execute": {
        "properties": {
          "inputs": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "subscriber": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Subscriber"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "Execute",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "HealthCheck": {
        "description": "Response model to validate and return when performing a health check.",
        "properties": {
          "status": {
            "default": "OK",
            "title": "Status",
            "type": "string"
          }
        },
        "title": "HealthCheck",
        "type": "object"
      },
      "InputValue-Input": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/InputValueNoObject-Input"
          },
          {
            "type": "object"
          }
        ],
        "title": "InputValue"
      },
      "InputValue-Output": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/InputValueNoObject-Output"
          },
          {
            "type": "object"
          }
        ],
        "title": "InputValue"
      },
      "InputValueNoObject-Input": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "$ref": "#/components/schemas/BinaryInputValue"
          },
          {
            "$ref": "#/components/schemas/Bbox"
          }
        ],
        "title": "InputValueNoObject"
      },
      "InputValueNoObject-Output": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "items": {},
            "type": "array"
          },
          {
            "$ref": "#/components/schemas/BinaryInputValue"
          },
          {
            "$ref": "#/components/schemas/Bbox"
          }
        ],
        "title": "InputValueNoObject"
      },
      "JobControlOptions": {
        "enum": [
          "sync-execute",
          "async-execute",
          "dismiss"
        ],
        "title": "JobControlOptions",
        "type": "string"
      },
      "JobList": {
        "properties": {
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/StatusInfo"
            },
            "title": "Jobs",
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          }
        },
        "required": [
          "jobs",
          "links"
        ],
        "title": "JobList",
        "type": "object"
      },
      "LandingPage": {
        "properties": {
          "attribution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The `attribution` should be short and intended for presentation to a user, for example, in a corner of a map. Parts of the text can be links to other resources if additional information is needed. The string can include HTML markup.",
            "title": "attribution for the Processes API"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "Example server implementing the OGC API - Processes 1.0 Standard",
            "title": "Description"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "Example processing server",
            "title": "Title"
          }
        },
        "required": [
          "links"
        ],
        "title": "LandingPage",
        "type": "object"
      },
      "Link": {
        "properties": {
          "href": {
            "title": "Href",
            "type": "string"
          },
          "hreflang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "en",
            "title": "Hreflang"
          },
          "rel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "service",
            "title": "Rel"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "application/json",
            "title": "Type"
          }
        },
        "required": [
          "href"
        ],
        "title": "Link",
        "type": "object"
      },
      "Metadata": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Metadata1"
          },
          {
            "$ref": "#/components/schemas/Metadata2"
          }
        ],
        "title": "Metadata"
      },
      "Metadata1": {
        "properties": {
          "href": {
            "title": "Href",
            "type": "string"
          },
          "hreflang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "en",
            "title": "Hreflang"
          },
          "rel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "service",
            "title": "Rel"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "application/json",
            "title": "Type"
          }
        },
        "required": [
          "href"
        ],
        "title": "Metadata1",
        "type": "object"
      },
      "Metadata2": {
        "properties": {
          "lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lang"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "title": "Metadata2",
        "type": "object"
      },
      "Process-Input": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "inputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InputValue-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "outputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InputValue-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "Process",
        "type": "object"
      },
      "Process-Output": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "inputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InputValue-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "outputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InputValue-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "Process",
        "type": "object"
      },
      "ProcessList": {
        "properties": {
          "links": {
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "title": "Links",
            "type": "array"
          },
          "processes": {
            "items": {
              "$ref": "#/components/schemas/ProcessSummary"
            },
            "title": "Processes",
            "type": "array"
          }
        },
        "required": [
          "processes",
          "links"
        ],
        "title": "ProcessList",
        "type": "object"
      },
      "ProcessSummary": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "jobControlOptions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/JobControlOptions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcontroloptions"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "metadata": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Metadata"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "version"
        ],
        "title": "ProcessSummary",
        "type": "object"
      },
      "Results": {
        "title": "Results"
      },
      "StatusCode": {
        "enum": [
          "accepted",
          "running",
          "successful",
          "failed",
          "dismissed"
        ],
        "title": "StatusCode",
        "type": "string"
      },
      "StatusInfo": {
        "properties": {
          "created": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "exception": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Exception"
              },
              {
                "type": "null"
              }
            ]
          },
          "finished": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished"
          },
          "jobID": {
            "title": "Jobid",
            "type": "string"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Link"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "processID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processid"
          },
          "progress": {
            "anyOf": [
              {
                "maximum": 100.0,
                "minimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "started": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started"
          },
          "status": {
            "$ref": "#/components/schemas/StatusCode"
          },
          "type": {
            "$ref": "#/components/schemas/Type2"
          },
          "updated": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          }
        },
        "required": [
          "type",
          "jobID",
          "status"
        ],
        "title": "StatusInfo",
        "type": "object"
      },
      "Subscriber": {
        "properties": {
          "failedUri": {
            "anyOf": [
              {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Faileduri"
          },
          "inProgressUri": {
            "anyOf": [
              {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inprogressuri"
          },
          "successUri": {
            "format": "uri",
            "minLength": 1,
            "title": "Successuri",
            "type": "string"
          }
        },
        "required": [
          "successUri"
        ],
        "title": "Subscriber",
        "type": "object"
      },
      "Type2": {
        "const": "process",
        "title": "Type2"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "This document is an API definition document provided alongside the OGC API - Processes standard. The OGC API - Processes Standard specifies a processing interface to communicate over a RESTful protocol using JavaScript Object Notation (JSON) encodings. The specification allows for the wrapping of computational tasks into executable processes that can be offered by a server and be invoked by a client application.",
    "title": "Unity Processing API conforming to the OGC API - Processes - Part 1 standard",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/": {
      "get": {
        "description": "The landing page provides links to the:\n- API Definition (no fixed path),\n- Conformance Statements (`/conformance`),\n- Processes Metadata (`/processes`),\n- Endpoint for Job Monitoring (`/jobs`).\n\nFor more information, see [Section 7.2](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_landing_page).",
        "operationId": "landing_page__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Landing page of this API"
      }
    },
    "/conformance": {
      "get": {
        "description": "A list of all conformance classes, specified in a standard, that the server conforms to.\n\n| Conformance class | URI |\n| -------- | ------- |\n| Core | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core |\n| OGC Process Description | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/ogc-process-description |\n| JSON | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/json |\n| HTML | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/html |\n| OpenAPI | Specification 3.0       http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/oas30 |\n| Job list | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/job-list |\n| Callback | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/callback |\n| Dismiss | http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/dismiss |\n\nFor more information, see [Section 7.4](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_conformance_classes).",
        "operationId": "conformance_declaration_conformance_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfClasses"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Information about standards that this API conforms to"
      }
    },
    "/health": {
      "get": {
        "description": "Endpoint to perform a healthcheck on. This endpoint can primarily be used Docker\nto ensure a robust container orchestration and management is in place. Other\nservices which rely on proper functioning of the API service will not deploy if this\nendpoint returns any other HTTP status code except 200 (OK).\nReturns:\n    HealthCheck: Returns a JSON response with the health status",
        "operationId": "get_health_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            },
            "description": "Return HTTP Status Code 200 (OK)"
          }
        },
        "summary": "Perform a Health Check"
      }
    },
    "/jobs": {
      "get": {
        "description": "Lists available jobs.\n\nFor more information, see [Section 11](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_job_list).",
        "operationId": "job_list_jobs_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Retrieve the list of jobs"
      }
    },
    "/jobs/{job_id}": {
      "delete": {
        "description": "Cancel a job execution and remove it from the jobs list.\n\nFor more information, see [Section 13](https://docs.ogc.org/is/18-062r2/18-062r2.html#Dismiss).",
        "operationId": "dismiss_jobs__job_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfo"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Cancel a job execution, remove a finished job"
      },
      "get": {
        "description": "Shows the status of a job.\n\nFor more information, see [Section 7.12](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_retrieve_status_info).",
        "operationId": "status_jobs__job_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfo"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Retrieve the status of a job"
      }
    },
    "/jobs/{job_id}/results": {
      "get": {
        "description": "Lists available results of a job. In case of a failure, lists exceptions instead.\n\nFor more information, see [Section 7.13](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_retrieve_job_results).",
        "operationId": "results_jobs__job_id__results_get",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "title": "Job Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Results"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Retrieve the result(s) of a job"
      }
    },
    "/processes": {
      "get": {
        "description": "The list of processes contains a summary of each process the OGC API - Processes offers, including the link to a more detailed description of the process.\n\nFor more information, see [Section 7.9](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_process_list).",
        "operationId": "process_list_processes_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessList"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Retrieve the list of available processes"
      },
      "post": {
        "description": "Deploy a new process.\n\n**Note:** This is not an officially supported endpoint in the OGC Processes specification.",
        "operationId": "deploy_process_processes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Process-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process-Output"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Deploy a process"
      }
    },
    "/processes/{process_id}": {
      "delete": {
        "description": "Undeploy an existing process.\n\n**Note:** This is not an officially supported endpoint in the OGC Processes specification.",
        "operationId": "undeploy_process_processes__process_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "process_id",
            "required": true,
            "schema": {
              "title": "Process Id",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "force",
            "required": false,
            "schema": {
              "default": false,
              "title": "Force",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Undeploy a process"
      },
      "get": {
        "description": "The process description contains information about inputs and outputs and a link to the execution-endpoint for the process. The Core does not mandate the use of a specific process description to specify the interface of a process. That said, the Core requirements class makes the following recommendation:\n\nImplementations SHOULD consider supporting the OGC process description.\n\nFor more information, see [Section 7.10](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_process_description).",
        "operationId": "process_description_processes__process_id__get",
        "parameters": [
          {
            "in": "path",
            "name": "process_id",
            "required": true,
            "schema": {
              "title": "Process Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process-Output"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Retrieve a process description"
      }
    },
    "/processes/{process_id}/execution": {
      "post": {
        "description": "Create a new job.\n\nFor more information, see [Section 7.11](https://docs.ogc.org/is/18-062r2/18-062r2.html#sc_create_job).",
        "operationId": "execute_processes__process_id__execution_post",
        "parameters": [
          {
            "in": "path",
            "name": "process_id",
            "required": true,
            "schema": {
              "title": "Process Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Execute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusInfo"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Execute a process"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
